name: Build and Release on Tag

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [CatMessenger.Telegram]
        os: [linux]
        arch: [amd64, arm64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore ./${{ matrix.project }}/${{ matrix.project }}.csproj

      - name: Build project
        run: dotnet publish ./${{ matrix.project }}/${{ matrix.project }}.csproj -c Release -r ${{ matrix.os }}-${{ matrix.arch }} -p:PublishSingleFile=true -o public/${{ matrix.os }}-${{ matrix.arch }}

      - name: Tar build artifacts
        run: tar -czf ${{ matrix.project }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz -C public/${{ matrix.os }}-${{ matrix.arch }} .

      - name: Replace invalid characters in ref
        id: replace_ref
        run: echo "cleaned_ref=${GITHUB_REF//\//-}" >> $GITHUB_ENV

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts-CatMessager-${{ env.cleaned_ref }}
          path: ${{ matrix.project }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz


  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Replace invalid characters in ref
        id: replace_ref
        run: echo "cleaned_ref=${GITHUB_REF//\//-}" >> $GITHUB_ENV
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts-CatMessager-${{ env.cleaned_ref }}
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: 'artifacts-CatMessager-${{ env.cleaned_ref }}/*.tar.gz'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
